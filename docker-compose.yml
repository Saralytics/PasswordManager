services:
  db:
    image: postgres
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data/db/
    networks:
      - backend
    expose:
      - 5432
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backend:/app/backend
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      - db
    networks:
      - backend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    command: npm start
    ports:
      - '3000:3000'

    volumes:
      - ./frontend:/app/frontend

    depends_on:
      - backend

  # ngrok:
  #   image: ngrok/ngrok:latest
  #   restart: unless-stopped
  #   # expose:
  #   #   - 4040
  #   ports:
  #     - "4040:4040"
  #   command:
  #         - "start"
  #         - "--all"
  #         - "--config"
  #         - "/ngrok.yml"
  #   volumes:
  #     - ./ngrok.yml:/ngrok.yml
  #   depends_on:
  #     - backend
  #   networks:
  #     - backend

networks:
  backend:
    driver: bridge